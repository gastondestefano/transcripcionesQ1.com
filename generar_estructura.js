const fs = require('fs');
const path = require('path');

// --- CONFIGURACIÓN ---
// Lista de tickers de las 500 empresas del S&P 500
// Ejemplo: ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', ... y así hasta 500]
// IMPORTANTE: Consigue esta lista y pégala aquí.
// Puedes encontrar listas en CSV o texto online, ej: Wikipedia, datahub.io
const tickers = [
    // ----- ¡¡¡DEBES PEGAR TU LISTA DE 500 TICKERS AQUÍ!!! -----
    // Ejemplo (sustituye esto con tu lista real):
    'MMM',
'AOS',
'ABT',
'ABBV',
'ACN',
'ATVI',
'AYI',
'ADBE',
'AAP',
'AMD',
'AES',
'AET',
'AMG',
'AFL',
'A',
'APD',
'AKAM',
'ALK',
'ALB',
'ARE',
'ALXN',
'ALGN',
'ALLE',
'AGN',
'ADS',
'LNT',
'ALL',
'GOOGL',
'GOOG',
'MO',
'AMZN',
'AEE',
'AAL',
'AEP',
'AXP',
'AIG',
'AMT',
'AWK',
'AMP',
'ABC',
'AME',
'AMGN',
'APH',
'APC',
'ADI',
'ANDV',
'ANSS',
'ANTM',
'AON',
'APA',
'AIV',
'AAPL',
'AMAT',
'APTV',
'ADM',
'ARNC',
'AJG',
'AIZ',
'T',
'ADSK',
'ADP',
'AZO',
'AVB',
'AVY',
'BHGE',
'BLL',
'BAC',
'BAX',
'BBT',
'BDX',
'BRK.B',
'BBY',
'BIIB',
'BLK',
'HRB',
'BA',
'BWA',
'BXP',
'BSX',
'BHF',
'BMY',
'AVGO',
'BF.B',
'CHRW',
'CA',
'COG',
'CDNS',
'CPB',
'COF',
'CAH',
'KMX',
'CCL',
'CAT',
'CBOE',
'CBG',
'CBS',
'CELG',
'CNC',
'CNP',
'CTL',
'CERN',
'CF',
'SCHW',
'CHTR',
'CHK',
'CVX',
'CMG',
'CB',
'CHD',
'CI',
'XEC',
'CINF',
'CTAS',
'CSCO',
'C',
'CFG',
'CTXS',
'CME',
'CMS',
'KO',
'CTSH',
'CL',
'CMCSA',
'CMA',
'CAG',
'CXO',
'COP',
'ED',
'STZ',
'GLW',
'COST',
'COTY',
'CCI',
'CSRA',
'CSX',
'CMI',
'CVS',
'DHI',
'DHR',
'DRI',
'DVA',
'DE',
'DAL',
'XRAY',
'DVN',
'DLR',
'DFS',
'DISCA',
'DISCK',
'DISH',
'DG',
'DLTR',
'D',
'DOV',
'DWDP',
'DPS',
'DTE',
'DUK',
'DRE',
'DXC',
'ETFC',
'EMN',
'ETN',
'EBAY',
'ECL',
'EIX',
'EW',
'EA',
'EMR',
'ETR',
'EVHC',
'EOG',
'EQT',
'EFX',
'EQIX',
'EQR',
'ESS',
'EL',
'RE',
'ES',
'EXC',
'EXPE',
'EXPD',
'ESRX',
'EXR',
'XOM',
'FFIV',
'FB',
'FAST',
'FRT',
'FDX',
'FIS',
'FITB',
'FE',
'FISV',
'FLIR',
'FLS',
'FLR',
'FMC',
'FL',
'F',
'FTV',
'FBHS',
'BEN',
'FCX',
'GPS',
'GRMN',
'IT',
'GD',
'GE',
'GGP',
'GIS',
'GM',
'GPC',
'GILD',
'GPN',
'GS',
'GT',
'GWW',
'HAL',
'HBI',
'HOG',
'HRS',
'HIG',
'HAS',
'HCA',
'HCP',
'HP',
'HSIC',
'HES',
'HPE',
'HLT',
'HOLX',
'HD',
'HON',
'HRL',
'HST',
'HPQ',
'HUM',
'HBAN',
'HII',
'IDXX',
'INFO',
'ITW',
'ILMN',
'INCY',
'IR',
'INTC',
'ICE',
'IBM',
'IP',
'IPG',
'IFF',
'INTU',
'ISRG',
'IVZ',
'IQV',
'IRM',
'JBHT',
'JEC',
'SJM',
'JNJ',
'JCI',
'JPM',
'JNPR',
'KSU',
'K',
'KEY',
'KMB',
'KIM',
'KMI',
'KLAC',
'KSS',
'KHC',
'KR',
'LB',
'LLL',
'LH',
'LRCX',
'LEG',
'LEN',
'LUK',
'LLY',
'LNC',
'LKQ',
'LMT',
'L',
'LOW',
'LYB',
'MTB',
'MAC',
'M',
'MRO',
'MPC',
'MAR',
'MMC',
'MLM',
'MAS',
'MA',
'MAT',
'MKC',
'MCD',
'MCK',
'MDT',
'MRK',
'MET',
'MTD',
'MGM',
'KORS',
'MCHP',
'MU',
'MSFT',
'MAA',
'MHK',
'TAP',
'MDLZ',
'MON',
'MNST',
'MCO',
'MS',
'MSI',
'MYL',
'NDAQ',
'NOV',
'NAVI',
'NTAP',
'NFLX',
'NWL',
'NFX',
'NEM',
'NWSA',
'NWS',
'NEE',
'NLSN',
'NKE',
'NI',
'NBL',
'JWN',
'NSC',
'NTRS',
'NOC',
'NCLH',
'NRG',
'NUE',
'NVDA',
'ORLY',
'OXY',
'OMC',
'OKE',
'ORCL',
'PCAR',
'PKG',
'PH',
'PDCO',
'PAYX',
'PYPL',
'PNR',
'PBCT',
'PEP',
'PKI',
'PRGO',
'PFE',
'PCG',
'PM',
'PSX',
'PNW',
'PXD',
'PNC',
'RL',
'PPG',
'PPL',
'PX',
'PCLN',
'PFG',
'PG',
'PGR',
'PLD',
'PRU',
'PEG',
'PSA',
'PHM',
'PVH',
'QRVO',
'QCOM',
'PWR',
'DGX',
'RRC',
'RJF',
'RTN',
'O',
'RHT',
'REG',
'REGN',
'RF',
'RSG',
'RMD',
'RHI',
'ROK',
'COL',
'ROP',
'ROST',
'RCL',
'SPGI',
'CRM',
'SBAC',
'SCG',
'SLB',
'SNI',
'STX',
'SEE',
'SRE',
'SHW',
'SIG',
'SPG',
'SWKS',
'SLG',
'SNA',
'SO',
'LUV',
'SWK',
'SBUX',
'STT',
'SRCL',
'SYK',
'STI',
'SYMC',
'SYF',
'SNPS',
'SYY',
'TROW',
'TPR',
'TGT',
'TEL',
'FTI',
'TXN',
'TXT',
'BK',
'CLX',
'COO',
'HSY',
'MOS',
'TRV',
'DIS',
'TMO',
'TIF',
'TWX',
'TJX',
'TMK',
'TSS',
'TSCO',
'TDG',
'TRIP',
'FOXA',
'FOX',
'TSN',
'USB',
'UDR',
'ULTA',
'UAA',
'UA',
'UNP',
'UAL',
'UNH',
'UPS',
'URI',
'UTX',
'UHS',
'UNM',
'VFC',
'VLO',
'VAR',
'VTR',
'VRSN',
'VRSK',
'VZ',
'VRTX',
'VIAB',
'V',
'VNO',
'VMC',
'WMT',
'WBA',
'WM',
'WAT',
'WEC',
'WFC',
'HCN',
'WDC',
'WU',
'WRK',
'WY',
'WHR',
'WMB',
'WLTW',
'WYN',
'WYNN',
'XEL',
'XRX',
'XLNX',
'XL',
'XYL',
'YUM',
'ZBH',
'ZION',
'ZTS'

    // ... y as í sucesivamente hasta completar los ~500 tickers.
    // Cada ticker debe ser una cadena de texto (entre comillas simples o dobles)
    // y separados por comas.
    // La lista puede ser muy larga, está bien.
    // NO OLVIDES LA COMA DESPUÉS DEL ÚLTIMO TICKER SI AÑADES MÁS DESPUÉS,
    // EXCEPTO SI ES EL ÚLTIMO ELEMENTO ABSOLUTO DEL ARRAY.
    // Ejemplo de los últimos:
    // 'XYZ',
    // 'ZYX' // Sin coma al final del array
];

const anos = ['2023', '2024', '2025']; // Años para los que quieres generar estructura
const trimestres = ['Q1', 'Q2', 'Q3', 'Q4']; // Trimestres
const tiposTranscripcion = ['completa', 'resumen']; // Tipos de archivo

const baseDataPath = path.join(__dirname, 'data', 'transcripts');

const markdownPlaceholderContent = (ticker, ano, trimestre, tipo) => {
    return `# ${tipo === 'completa' ? 'Transcripción Completa' : 'Resumen'}: ${ticker} - ${trimestre} ${ano}\n\n**Fecha:** [Insertar Fecha]\n\n## Participantes:\n* [Nombre]\n\n---\n\n## Contenido:\n\n[Aquí va el contenido de la ${tipo}...]`;
};

// --- LÓGICA DEL SCRIPT ---
function crearEstructura() {
    console.log('Iniciando la creación de la estructura de carpetas y archivos...');

    if (!fs.existsSync(baseDataPath)) {
        fs.mkdirSync(baseDataPath, { recursive: true });
        console.log(`Directorio base creado: ${baseDataPath}`);
    }

    tickers.forEach(ticker => {
        const tickerPath = path.join(baseDataPath, ticker);
        if (!fs.existsSync(tickerPath)) {
            fs.mkdirSync(tickerPath);
            console.log(`Creado directorio para Ticker: ${tickerPath}`);
        }

        anos.forEach(ano => {
            const anoPath = path.join(tickerPath, ano);
            if (!fs.existsSync(anoPath)) {
                fs.mkdirSync(anoPath);
                console.log(`Creado directorio para Año: ${anoPath}`);
            }

            trimestres.forEach(trimestre => {
                tiposTranscripcion.forEach(tipo => {
                    const nombreArchivo = `${trimestre}_${tipo}.md`;
                    const filePath = path.join(anoPath, nombreArchivo);

                    if (!fs.existsSync(filePath)) {
                        const contenido = markdownPlaceholderContent(ticker, ano, trimestre, tipo);
                        fs.writeFileSync(filePath, contenido, 'utf8');
                        console.log(`Creado archivo: ${filePath}`);
                    }
                });
            });
        });
    });

    console.log('--- Proceso de creación de estructura completado. ---');
    console.log('IMPORTANTE: Recuerda actualizar el objeto `empresasData` en `js/index-script.js` para reflejar estas nuevas empresas y archivos.');
}

crearEstructura();